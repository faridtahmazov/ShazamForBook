Writing and testing equals (and hashCode) methods is tedious, and the result-
ing code is mundane. An excellent alternative to writing and testing these methods
manually is to use Google’s open source AutoValue framework, which automati-
cally generates these methods for you, triggered by a single annotation on the
class . In most cases, the methods generated by AutoValue are essentially identical.
l n a q r o y. b b c d f g y
to those you’d write yourself. a b c d f g y.
IDEs, too, have facilities to generate equals and hashCode methods, but the
resulting source code is more verbose and less readable than code that uses
AutoValue, does not track changes in the class automatically, and therefore
requires testing. That said, having IDEs generate equals (and hashCode) methods
is generally preferable to implementing them manually because IDEs do not make
careless mistakes, and humans do. Hmm, Anladım.
In summary, don’t override the equals method unless you have to: in many
cases, the implementation inherited from Object does exactly what you want. If
you do override equals, make sure to compare all of the class’s significant fields
and to compare them in a manner that preserves all five provisions of the equals
contract. Ohh sentences are very long.